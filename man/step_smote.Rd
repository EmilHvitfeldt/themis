% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smote.R
\name{step_smote}
\alias{step_smote}
\alias{tidy.step_smote}
\title{Apply SMOTE algorithm}
\usage{
step_smote(recipe, ..., role = NA, trained = FALSE, column = NULL,
  perc_over = 200, neighbors = 5, perc_under = 200, skip = TRUE,
  seed = sample.int(10^5, 1), id = rand_id("smote"))

\method{tidy}{step_smote}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variable is used to sample the data. See \code{\link[=selections]{selections()}}
for more details. The selection should result in \emph{single
factor variable}. For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{column}{A character string of the variable name that will
be populated (eventually) by the \code{...} selectors.}

\item{perc_over}{A numeric. Determines the of over-sampling of the
minority class.}

\item{neighbors}{An integer. Number of nearest neighbours that are used
to generate the new examples of the minority class.}

\item{perc_under}{A numeric. Determines the amount of extra cases
from the majority classes are selected for each case generated
from the minority class.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[=bake.recipe]{bake.recipe()}}? While all operations are baked
when \code{\link[=prep.recipe]{prep.recipe()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations}

\item{seed}{An integer that will be used as the seed when
smote-ing.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_smote} object.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any). For the
\code{tidy} method, a tibble with columns \code{terms} which is
the variable used to sample.
}
\description{
\code{step_smote} creates a \emph{specification} of a recipe
step that generate new examples of the  minority class using nearest
neighbors of these cases.
}
\details{
TODO

All columns in the data are sampled and returned by \code{\link[=juice]{juice()}}
and \code{\link[=bake]{bake()}}.

When used in modeling, users should strongly consider using the
option \code{skip = TRUE} so that the extra sampling is \emph{not}
conducted outside of the training set.
}
\examples{
data(okc)

sort(table(okc$Class, useNA = "always"))

ds_rec <- recipe(Class ~ age + height, data = okc) \%>\%
  step_smote(Class) \%>\%
  prep()

table(juice(ds_rec)$Class, useNA = "always")

# since `skip` defaults to TRUE, baking the step has no effect
baked_okc <- bake(ds_rec, new_data = okc)
table(baked_okc$Class, useNA = "always")

ds_rec2 <- recipe(Class ~ age + height, data = okc) \%>\%
  step_smote(Class, perc_over = 400) \%>\%
  prep()

table(juice(ds_rec2)$Class, useNA = "always")

}
\concept{preprocessing}
\concept{subsampling}
\keyword{datagen}
