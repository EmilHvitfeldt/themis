% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smote.R
\name{step_smote}
\alias{step_smote}
\alias{tidy.step_smote}
\title{Apply SMOTE algorithm}
\usage{
step_smote(recipe, ..., role = NA, trained = FALSE, column = NULL,
  perc_over = 200, neighbors = 5, perc_under = 200, skip = TRUE,
  seed = sample.int(10^5, 1), id = rand_id("smote"))

\method{tidy}{step_smote}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variable is used to sample the data. See \code{\link[=selections]{selections()}}
for more details. The selection should result in \emph{single
factor variable}. For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{trained}{A logical to indicate if the quantities for
preprocessing have been estimated.}

\item{column}{A character string of the variable name that will
be populated (eventually) by the \code{...} selectors.}

\item{perc_over}{A numeric. Determines the of over-sampling of the
minority class.}

\item{neighbors}{An integer. Number of nearest neighbours that are used
to generate the new examples of the minority class.}

\item{perc_under}{A numeric. Determines the amount of extra cases
from the majority classes are selected for each case generated
from the minority class.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \code{\link[=bake.recipe]{bake.recipe()}}? While all operations are baked
when \code{\link[=prep.recipe]{prep.recipe()}} is run, some operations may not be able to be
conducted on new data (e.g. processing the outcome variable(s)).
Care should be taken when using \code{skip = TRUE} as it may affect
the computations for subsequent operations}

\item{seed}{An integer that will be used as the seed when
smote-ing.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_smote} object.}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any). For the
\code{tidy} method, a tibble with columns \code{terms} which is
the variable used to sample.
}
\description{
\code{step_smote} creates a \emph{specification} of a recipe
step that generate new examples of the  minority class using nearest
neighbors of these cases. Using \code{\link[DMwR:SMOTE]{DMwR::SMOTE()}}.
}
\details{
The parameters \code{perc_over} and \code{perc_under} control the amount of
over-sampling of the minority class and under-sampling of the
majority classes, respectively. Both numbers are interpreted as
procentages.

\code{perc_over} will typically be a number above 100. With this type of values,
for each case in the orginal data set belonging to the minority class,
\code{perc_over}/100 new examples of that class will be created. If \code{perc_over}
is a value below 100 than a single case will be generated for a randomly
selected proportion (given by \code{perc_over}/100) of the cases belonging to the
minority class on the original data set. This means that if there is 100
minority cases, then if \code{perc_over} = 200, then 200/100 * 100 = 200 new cases
will be generated for the minority class.

The parameter \code{perc_under} controls the proportion of cases of the majority
class that will be randomly selected for the final "balanced" data set.
This proportion is calculated with respect to the number of newly generated
minority class cases. For instance, if 200 new examples were generated for
the minority class, a value of \code{perc_under} of 100 will randomly select
exactly 200 cases belonging to the majority classes from the original
data set to belong to the final data set. Values above 100 will
select more examples from the majority classes.

The parameter \code{neighbors} controls the way the new examples are created.
For each currently existing minority class example X new examples will be
created (this is controlled by the parameter \code{perc_over} as mentioned above).
These examples will be generated by using the information from the
\code{neighbors} nearest neighbours of each example of the minority class.
The parameter \code{neighbors} controls how many of these neighbours are used.

All columns in the data are sampled and returned by \code{\link[=juice]{juice()}}
and \code{\link[=bake]{bake()}}.

When used in modeling, users should strongly consider using the
option \code{skip = TRUE} so that the extra sampling is \emph{not}
conducted outside of the training set.
}
\examples{
data(credit_data)

sort(table(credit_data$Status, useNA = "always"))

ds_rec <- recipe(Status ~ Age + Income + Assets, data = credit_data) \%>\%
  step_smote(Status) \%>\%
  prep()

table(juice(ds_rec)$Status, useNA = "always")

# since `skip` defaults to TRUE, baking the step has no effect
baked_okc <- bake(ds_rec, new_data = credit_data)
table(baked_okc$Status, useNA = "always")

ds_rec2 <- recipe(Status ~ Age + Income + Assets, data = credit_data) \%>\%
  step_smote(Status, perc_over = 400) \%>\%
  prep()

table(juice(ds_rec2)$Status, useNA = "always")

}
\references{
Chawla, N. V., Bowyer, K. W., Hall, L. O., and Kegelmeyer,
W. P. (2002). Smote: Synthetic minority over-sampling technique.
Journal of Artificial Intelligence Research, 16:321-357.
}
\concept{preprocessing}
\concept{subsampling}
\keyword{datagen}
